/**
 * Сортировка подсчётом.
 * Сложность - O(N).
 * Минусы данного алгоритма заключаются в том, что необходимо передавать максимальное значение в массиве,
 * для частотного анализа.
 * Числа не могут быть отрицательными.
 * Для больших чисел необходимо большое кол-во памяти.
 * В данном случае частотный анализ проводится от 0 до 9.
 * @param A - исходный массив
 * @return результирующий массив
 */
function countSort(A: number[]): number[] {
    if (!A.length) return A;

    /* ========= Частотный анализ ========= */
    const F: number[] = [];
    const result = [];

    for (let i = 0; i < 10; i++) F[i] = 0;
    for (const item of A) {
        F[item] += 1;
    }
    /* =========================== */

    for (let [i, item] of F.entries()) {
        while (item) {
            result.push(i); item--;
        }
    }

    return result;
}

export default countSort;
